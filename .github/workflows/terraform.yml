name: 'Terraform'

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  AWS_REGION: ap-northeast-2  # 기본 AWS 지역 설정

permissions:
  contents: read
  id-token: write  # GitHub OIDC 토큰을 사용해 AWS에 인증

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4 # 최신 버전으로 업데이트

    - name: Set up Node.js
      uses: actions/setup-node@v3 # Node.js 최신 버전 사용
      with:
        node-version: '18' # Node.js 버전 18 사용

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3 # 최신 버전으로 업데이트
      with:
        terraform_version: 1.4.6  # 원하는 Terraform 버전으로 설정

    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Plan
      run: terraform plan -input=false -out=tfplan -no-color
    
    - name: Terraform Apply
      id: apply
      continue-on-error: true
      run: terraform apply -input=false -auto-approve tfplan
    
    - name: Terraform Destroy on Failure
      if: ${{ failure() || steps.apply.outcome == 'failure' }}
      run: terraform destroy -auto-approve
    
      